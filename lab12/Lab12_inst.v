// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 20.1 (Build Build 720 11/11/2020)
// Created on Mon Apr 22 15:53:41 2024

Lab12 Lab12_inst
(
	.clk(clk_sig) ,	// input  clk_sig
	.clear_entry(clear_entry_sig) ,	// input  clear_entry_sig
	.clear_all(clear_all_sig) ,	// input  clear_all_sig
	.value(value_sig) ,	// input [3:0] value_sig
	.reset(reset_sig) ,	// output  reset_sig
	.load_A(load_A_sig) ,	// output  load_A_sig
	.load_B(load_B_sig) ,	// output  load_B_sig
	.load_R(load_R_sig) ,	// output  load_R_sig
	.IUAU(IUAU_sig) ,	// output  IUAU_sig
	.add_sub(add_sub_sig) 	// output  add_sub_sig
);

defparam Lab12_inst.S0 = 'b000;
defparam Lab12_inst.S1 = 'b001;
defparam Lab12_inst.S2 = 'b010;
defparam Lab12_inst.S3 = 'b011;
defparam Lab12_inst.S4 = 'b100;
